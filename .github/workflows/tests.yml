name: Playwright Tests
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
jobs:
  setup-storage:
    name: "Setup Storage State"
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.54.0-jammy
      options: --user 1001
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install dependencies
        run: npm ci
      - name: Set up environment variables
        run: |
          echo "TEST_USER_STANDARD=${{ secrets.TEST_USER_STANDARD }}" >> .env
          echo "TEST_USER_LOCKED=${{ secrets.TEST_USER_LOCKED }}" >> .env
          echo "TEST_USER_PROBLEM=${{ secrets.TEST_USER_PROBLEM }}" >> .env
          echo "TEST_USER_GLITCH=${{ secrets.TEST_USER_GLITCH }}" >> .env
          echo "TEST_USER_INVALID=${{ secrets.TEST_USER_INVALID }}" >> .env
          echo "TEST_PASS_VALID=${{ secrets.TEST_PASS_VALID }}" >> .env
          echo "TEST_PASS_INVALID=${{ secrets.TEST_PASS_INVALID }}" >> .env
      - name: Run setup-storage
        run: npx playwright test --project=setup-storage
      - name: Upload blob report from setup-storage
        uses: actions/upload-artifact@v4
        with:
          name: blob-report-setup-storage
          path: blob-report
          retention-days: 1
      - name: Upload storage state
        uses: actions/upload-artifact@v4
        with:
          name: storage-state
          path: setStorageState/storageStateFiles/

  playwright-sharding-docker:
    name: "Playwright Tests with sharding in docker"
    needs: setup-storage
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shardIndex: [1, 2, 3, 4]
        shardTotal: [4]
    container:
      image: mcr.microsoft.com/playwright:v1.54.0-jammy
      options: --user 1001
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install dependencies
        run: npm ci
      - name: Set up environment variables
        run: |
          echo "TEST_USER_STANDARD=${{ secrets.TEST_USER_STANDARD }}" >> .env
          echo "TEST_USER_LOCKED=${{ secrets.TEST_USER_LOCKED }}" >> .env
          echo "TEST_USER_PROBLEM=${{ secrets.TEST_USER_PROBLEM }}" >> .env
          echo "TEST_USER_GLITCH=${{ secrets.TEST_USER_GLITCH }}" >> .env
          echo "TEST_USER_INVALID=${{ secrets.TEST_USER_INVALID }}" >> .env
          echo "TEST_PASS_VALID=${{ secrets.TEST_PASS_VALID }}" >> .env
          echo "TEST_PASS_INVALID=${{ secrets.TEST_PASS_INVALID }}" >> .env
      - name: Download storage state
        uses: actions/download-artifact@v4
        with:
          name: storage-state
          path: setStorageState/storageStateFiles/
      - name: Run Playwright tests
        run: npx playwright test --project=chromium --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}
      - name: Upload blob report to GitHub Actions Artifacts
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: blob-report-${{ matrix.shardIndex }}
          path: blob-report
          retention-days: 1

  merge-reports:
    # Merge reports after playwright-tests, even if some shards have failed
    if: ${{ !cancelled() }}
    needs: [playwright-sharding-docker]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install dependencies
        run: npm ci
      - name: Download blob reports from GitHub Actions Artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-blob-reports
          pattern: blob-report-*
          merge-multiple: true
      - name: Merge into HTML Report
        run: npx playwright merge-reports --reporter html ./all-blob-reports
      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        with:
          name: html-report--attempt-${{ github.run_attempt }}
          path: playwright-report
          retention-days: 14